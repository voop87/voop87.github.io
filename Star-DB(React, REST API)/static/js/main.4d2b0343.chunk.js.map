{"version":3,"sources":["components/error-indicator/error-indicator.js","components/error-indicator/index.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/spinner.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/spinner/index.js","components/item-list/item-list.js","components/item-list/index.js","components/item-details/item-details.js","components/item-details/index.js","components/people-page/index.js","components/people-page/people-page.js","components/planets-page/index.js","components/planets-page/planets-page.js","components/starships-page/index.js","components/starships-page/starships-page.js","components/starship-details/index.js","components/starship-details/starship-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["ErrorIndicator","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","Header","to","SwapiService","_apiBase","_imageUrlBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","person","_transformPersonData","getPerson","id","getAllPlanets","planet","_transformPlanetData","getPlanet","getAllStarships","starship","_transformStarshipData","getStarship","getPersonImage","getPlanetImage","getStarshipImage","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","gender","birthYear","birth_year","eyeColor","eye_color","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","Spinner","PlanetView","Fragment","width","height","alt","src","RandomPlanet","swapi","loading","onPlanetLoaded","error","onError","err","updatePlanet","Math","floor","random","then","catch","interval","setInterval","clearInterval","hasData","errorIndicator","spinner","content","ItemListView","itemList","onItemSelected","renderItem","elements","label","onClick","ItemList","data","onItemListLoaded","getData","Record","field","ItemDetails","image","updateItem","prevProps","itemId","getImageUrl","React","Children","child","cloneElement","PeoplePage","withRouter","history","params","push","PlanetsPage","selectedPlanet","onPlanetSelected","StarshipsPage","StarshipDetails","App","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d2b0343.chunk.js","sourcesContent":["import React from 'react';\n\nimport './error-inticator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error-indicator'>\n      <span className='boom'>BOOM!</span>\n      <span>Something has gone terribly wrong</span>\n      <span>(but we already sent droids to fix it)</span>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator/>\n    }\n\n    return this.props.children;\n  };\n}","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <header className='header d-flex'>\n      <h1 className='header__logo'>\n        <Link className='header__logo-link' to='/'>StarDB</Link>\n      </h1>\n      \n      <nav className='header__nav'>\n        <ul className='header__menu-list d-flex'>\n          <li className='header__menu-item'>\n            <Link className='header__menu-link' to='/people/'>Persons</Link>\n          </li>\n          <li className='header__menu-item'>\n            <Link className='header__menu-link' to='/planets/'>Planets</Link>\n          </li>\n          <li className='header__menu-item'>\n            <Link className='header__menu-link' to='/starships/'>Starships</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","export default class SwapiService {\n  _apiBase = `https://swapi.dev/api`;\n  _imageUrlBase = `https://starwars-visualguide.com/assets/img`;\n\n  getResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\n    }\n\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n    return res.results.map((person) => this._transformPersonData(person));\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPersonData(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map((planet) => this._transformPlanetData(planet));\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanetData(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map((starship) => this._transformStarshipData(starship));\n  };\n\n  getStarship = async (id) => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarshipData(starship);\n  };\n\n  getPersonImage = ({id}) => {\n    return `${this._imageUrlBase}/characters/${id}.jpg`\n  };\n\n  getPlanetImage = ({id}) => {\n    return `${this._imageUrlBase}/planets/${id}.jpg`\n  };\n\n  getStarshipImage = ({id}) => {\n    return `${this._imageUrlBase}/starships/${id}.jpg`\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformPlanetData = (planet) => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    }\n  };\n\n  _transformPersonData = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    }\n  };\n\n  _transformStarshipData = (starship) => {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    }\n  };\n};","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-double-ring-z3dcm6xcrq\">\n      <div className=\"ldio-1c9d5agblt7\">\n        <div></div>\n        <div></div>\n        <div><div></div></div>\n        <div><div></div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport ErrorIndicator from '../error-indicator/error-indicator';\nimport Spinner from '../spinner/spinner';\n\nimport './random-planet.css';\n\nconst PlanetView = ({planet}) => {\n  const { id, name, population, rotationPeriod, diameter } = planet;\n\n  return (\n    <React.Fragment>\n      <img className='random-planet__img' width='100' height='100' alt='Planet'\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\n      <div className='random-planet__info'>\n        <h2 className='random-planet__title'>{ name }</h2>\n        <ul className='random-planet__desc-list'>\n          <li className='random-planet__desc-item'>\n            <span className='random-planet__desc-text'>Population</span>\n            <span className='random-planet__desc-value'>{ population }</span>\n          </li>\n          <li className='random-planet__desc-item'>\n            <span className='random-planet__desc-text'>Rotation Period</span>\n            <span className='random-planet__desc-value'>{ rotationPeriod }</span>\n          </li>\n          <li className='random-planet__desc-item'>\n            <span className='random-planet__desc-text'>Diameter</span>\n            <span className='random-planet__desc-value'>{ diameter }</span>\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default class RandomPlanet extends Component {\n  swapi = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true\n  };\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 5000);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  };\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n      error: false\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random()*18) + 2;\n    this.swapi\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { planet, loading, error } = this.state;\n    const hasData = !(loading || error);\n\n    const errorIndicator = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <PlanetView planet={planet} /> : null;\n\n    return (\n      <section className='random-planet d-flex'>\n        {errorIndicator}\n        {spinner}\n        {content}\n      </section>\n    );\n  };\n};","import RandomPlanet from './random-planet';\n\nexport default RandomPlanet;","import Spinner from './spinner';\n\nexport default Spinner;","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\nimport Spinner from '../spinner';\n\nimport './item-list.css';\n\nconst ItemListView = ({itemList, onItemSelected, renderItem}) => {\n  const elements = itemList.map((item) => {\n    const label = renderItem(item);\n\n    return (\n      <li \n        className='list-group-item'\n        key={item.id}\n        onClick={() => {onItemSelected(item.id)}}>\n        {label}\n      </li>\n    );\n  });\n  \n  return (\n    <ul className='item-list list-group'>\n      {elements}\n    </ul>\n  );\n};\n\nclass ItemList extends Component {\n  render() {\n    const { data, loading, error, onItemSelected, renderItem } = this.props;\n    const hasData = !(loading || error);\n\n    const errorIndicator = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <ItemListView \n                                itemList={data} \n                                onItemSelected={onItemSelected}\n                                renderItem={renderItem}/> : null;\n\n    return (\n      <React.Fragment>\n        {errorIndicator}\n        {spinner}\n        {content}\n      </React.Fragment>\n    );\n  };\n}\n\nconst withData = () => {\n  return class extends Component {\n    state = {\n      data: null,\n      loading: true,\n      error: false\n    };\n  \n    onItemListLoaded = (data) => {\n      this.setState({\n        data,\n        loading: false,\n        error: false\n      });\n    };\n  \n    onError = (err) => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  \n    componentDidMount() {\n      const { getData } = this.props;\n      getData()\n        .then(this.onItemListLoaded)\n        .catch(this.onError);\n    };\n    \n    render() {\n      const { data, loading, error } = this.state;\n\n      return (\n        <ItemList {... this.props} data={data} loading={loading} error={error}/>\n      );\n    };\n  };\n};\n\nexport default withData();","import ItemList from './item-list';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner';\n\nimport './item-details.css';\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <li className='item-card__desc-item'>\n      <span className='item-card__desc-text'>{ label }</span>\n      <span className='item-card__desc-value'>{ item[field] }</span>\n    </li>\n  );\n};\nexport { Record };\n\nexport default class ItemDetails extends Component {\n\n  swapi = new SwapiService();\n\n  state = {\n    item: null,\n    image: null,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  };\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId)\n      .then((item) => {\n        this.setState({ \n          item,\n          image: getImageUrl(item),\n          loading: false\n        });\n      });\n  };\n\n  render() {\n    if (!this.state.item) {\n      return (\n        <span>Select an item from a list</span>\n      );\n    }\n\n    const { name } = this.state.item;\n    const { item, image, loading } = this.state;\n    const spinner = loading ? <Spinner /> : null;\n\n    return (\n      <React.Fragment>\n        { spinner }\n        <div className='item-card d-flex'>\n          <img className='item-card__img' src={ image } width='100' height='100' alt='Item'/>\n          <div className='item-card__info'>\n            <h2 className='item-card__title'>{ name }</h2>\n            <ul className='item-card__desc-list'>\n              {\n                React.Children.map(this.props.children, (child) => {\n                  return React.cloneElement(child, { item });\n                })\n              }\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n};","import ItemDetails, { Record } from './item-details';\n\nexport { Record };\nexport default ItemDetails;","import PeoplePage from './people-page';\n\nexport default PeoplePage;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ErrorBoundry from '../error-boundry';\nimport ItemList from '../item-list';\nimport ItemDetails, { Record } from '../item-details';\nimport SwapiService from '../../services/swapi-service';\n\nconst PeoplePage = ({ history, match }) => {\n  const swapi = new SwapiService();\n  const { id } = match.params;\n\n  return (\n    <ErrorBoundry>\n      <div className='row mb2'>\n        <div className='col-md-6'>\n          <ItemList\n            onItemSelected={(id) => history.push(id)}\n            getData={swapi.getAllPeople}\n            renderItem={(item) => `${item.name} (${item.gender}, ${item.birthYear})`}/>\n        </div>\n        <div className='col-md-6'>\n          <ItemDetails\n            itemId={id}\n            getData={swapi.getPerson}\n            getImageUrl={swapi.getPersonImage}>\n              \n            <Record field='gender' label='Gender'/>\n            <Record field='eyeColor' label='Eye color'/>\n          </ItemDetails>\n        </div>\n      </div>\n    </ErrorBoundry>\n  );\n}\n\nexport default withRouter(PeoplePage);","import PlanetsPage from './planets-page';\n\nexport default PlanetsPage;","import React, { Component } from 'react';\nimport ErrorBoundry from '../error-boundry';\nimport ItemList from '../item-list';\nimport ItemDetails, { Record } from '../item-details';\nimport SwapiService from '../../services/swapi-service';\n\nexport default class PlanetsPage extends Component {\n  swapi = new SwapiService();\n\n  state = {\n    selectedPlanet: null\n  };\n\n  onPlanetSelected = (id) => {\n    this.setState({\n      selectedPlanet: id\n    });\n  };\n\n  render() {\n    return (\n      <ErrorBoundry>\n        <div className='row mb2'>\n          <div className='col-md-6'>\n            <ItemList\n              onItemSelected={this.onPlanetSelected}\n              getData={this.swapi.getAllPlanets}\n              renderItem={(item) => `${item.name} (${item.population})`}/>\n          </div>\n          <div className='col-md-6'>\n            <ItemDetails\n              itemId={this.state.selectedPlanet}\n              getData={this.swapi.getPlanet}\n              getImageUrl={this.swapi.getPlanetImage}>\n                \n              <Record field='population' label='Population'/>\n              <Record field='rotationPeriod' label='Rotation period'/>\n              <Record field='diameter' label='Diameter'/>\n            </ItemDetails>\n          </div>\n        </div>\n      </ErrorBoundry>\n    );\n  };\n}\n","import StarshipsPage from './starships-page';\n\nexport default StarshipsPage;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ErrorBoundry from '../error-boundry';\nimport ItemList from '../item-list';\nimport SwapiService from '../../services/swapi-service';\n\nconst StarshipsPage = ({ history }) => {\n  const swapi = new SwapiService();\n\n  return (\n    <ErrorBoundry>\n      <ItemList\n        onItemSelected={(itemId) => history.push(itemId)}\n        getData={swapi.getAllStarships}\n        renderItem={(item) => `${item.name} (${item.model})`}/>\n    </ErrorBoundry>\n  );\n}\n\nexport default withRouter(StarshipsPage);","import StarshipDetails from './starship-details';\n\nexport default StarshipDetails;","import React from 'react';\nimport ErrorBoundry from '../error-boundry';\nimport ItemDetails, { Record } from '../item-details';\nimport SwapiService from '../../services/swapi-service';\n\nconst StarshipDetails = ({ itemId }) => {\n  const swapi = new SwapiService();\n\n  return (\n    <ErrorBoundry>\n      <ItemDetails\n        itemId={itemId}\n        getData={swapi.getStarship}\n        getImageUrl={swapi.getStarshipImage}>\n          \n        <Record field='model' label='Model'/>\n        <Record field='manufacturer' label='Manufacturer'/>\n        <Record field='costInCredits' label='Cost in Credits'/>\n        <Record field='length' label='Length'/>\n        <Record field='crew' label='Crew'/>\n        <Record field='passengers' label='Passengers'/>\n        <Record field='cargoCapacity' label='Cargo capacity'/>\n      </ItemDetails>\n    </ErrorBoundry>\n  );\n}\n\nexport default StarshipDetails;","import App from './app.js';\n\nexport default App;","import { HashRouter as Router, Route } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport ErrorBoundry from '../error-boundry';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport PeoplePage from '../people-page';\nimport PlanetsPage from '../planets-page';\nimport StarshipsPage from '../starships-page';\nimport StarshipDetails from '../starship-details';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <ErrorBoundry>\n        <Router>\n          <div className='container'>\n            <Header />\n            <RandomPlanet />\n            <Route path='/'\n                   exact\n                   render={() => <h2>Welcome to StarDB</h2>} />\n\n            {/* сохраняем URL выбранного персонажа */}\n            <Route path='/people/:id?' component={PeoplePage} />\n            {/* оставляем без изменения (для сравнения) */}\n            <Route path='/planets' component={PlanetsPage} />\n            <Route path='/starships' exact component={StarshipsPage} />\n            {/* переходим на URL выбранного корабля */}\n            <Route path='/starships/:id' \n                   render={({ match }) => {\n                     const { id } = match.params;\n                     return <StarshipDetails itemId={id} />\n                   }} />\n          </div>\n        </Router>\n      </ErrorBoundry>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/index.js';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}