{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-new-item/index.js","components/todo-new-item/todo-new-item.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/todo-filter/index.js","components/todo-filter/todo-filter.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","className","TodoNewItem","state","label","onLabelChange","evt","setState","target","value","onSubmit","preventDefault","props","onAdded","action","this","type","placeholder","onChange","required","aria-label","Component","TodolistItem","id","done","onDeleted","onToggleDone","classNames","htmlFor","onClick","Todolist","todos","elements","map","item","TodoFilter","filters","tasksLeft","onCheckAllDone","onClearCompleted","hasDoneTask","filter","onChangeFilter","filterItems","activeClass","name","App","nextId","Date","now","todoData","toggleDone","idx","findIndex","el","oldItem","newItem","slice","addTask","text","newTask","createTask","deleteTask","checkAllDone","clearCompleted","filterTasks","items","filterName","changeActiveFilter","localStorage","getItem","JSON","parse","setItem","stringify","toDoCount","length","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.422dd372.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\n\nimport './app-header.css';\n\nconst AppHeader = () => {\n  return (\n    <h1 className='app-title'>Your todo list</h1>\n  );\n};\n\nexport default AppHeader;","import TodoNewItem from './todo-new-item';\n\nexport default TodoNewItem;","import React, { Component } from 'react';\n\nimport './todo-new-item.css';\n\nexport default class TodoNewItem extends Component {\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (evt) => {\n    this.setState({\n      label: evt.target.value\n    })\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.onAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <form\n          className='new-item-form'\n          action='#'\n          onSubmit={this.onSubmit}>\n          <input\n            className='new-item-input'\n            type='text'\n            placeholder='Enter your taskname here'\n            onChange={this.onLabelChange}\n            value={this.state.label}\n            required/>\n          <button \n            className='new-item-btn visually-hidden' \n            type='submit'\n            aria-label='Add new task'></button>\n        </form>\n      </div>\n    );\n  };\n};","import TodolistItem from './todo-list-item';\n\nexport default TodolistItem;","import React, { Component } from 'react';\n\nimport './todo-list-item.css';\n\n\nexport default class TodolistItem extends Component {\n\n  render() {\n    const { id, label, done, onDeleted, onToggleDone } = this.props;\n\n    let classNames = 'todo-item';\n    if (done) {\n      classNames += ' done';\n    }\n    \n    return (\n      <li className={classNames}>\n        <div className='container'>\n          <input className='todo-item__check visually-hidden' type='checkbox' id={ id }/>\n          <label \n            className='todo-item__check-label'\n            htmlFor={ id }\n            onClick={ onToggleDone }>\n            <i className='fa fa-check'></i>\n            { label }\n          </label>\n          <button\n            className='todo-item__del-btn'\n            type='button'\n            onClick={ onDeleted }>\n            <i className=\"fa fa-trash\"></i>\n          </button>\n        </div>\n      </li>\n    );\n  };\n}","import Todolist from './todo-list';\n\nexport default Todolist;","import React from 'react';\nimport TodolistItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst Todolist = ({ todos, onDeleted, onToggleDone }) => {\n  const elements = todos.map((item) => {\n    return (\n      <TodolistItem\n        key={item.id}\n        id={item.id}\n        label={item.label}\n        done={item.done}\n        onDeleted={() => onDeleted(item.id)}\n        onToggleDone={() => onToggleDone(item.id)}\n      /> \n    );\n  });\n\n  return (\n    <ul className='todo-list'>\n      { elements }\n    </ul>\n  );\n};\n\nexport default Todolist;","import TodoFilter from './todo-filter';\n\nexport default TodoFilter;","import React, { Component } from 'react';\n\nimport './todo-filter.css';\n\nexport default class TodoFilter extends Component {\n  filters = [\n    { id: 'all', label: 'All'},\n    { id: 'todo', label: 'ToDo'},\n    { id: 'completed', label: 'Completed'}\n  ];\n\n  render() {\n    const { tasksLeft, onCheckAllDone, onClearCompleted,\n      hasDoneTask, filter, onChangeFilter } = this.props;\n    \n    let classNames = 'filter__btn';\n    if (!hasDoneTask) {\n      classNames += ' d-none';\n    }\n\n    const filterItems = this.filters.map(({id, label}) => {\n      const isActive = filter === id;\n      const activeClass = isActive ? 'active' : '';\n      return (\n        <li className='filter__item' key={id}>\n          <input className='filter__input visually-hidden' type='radio' name='filter' id={id}/>\n          <label\n            className={`filter__label ${activeClass}`}\n            htmlFor={id}\n            onClick={() => {onChangeFilter(id)}}>{label}</label>\n        </li>\n      );\n    });\n\n    return (\n      <div className='filter'>\n        <div className='container'>\n          <button \n            className='filter__btn'\n            id='check-all-btn'\n            type='button'\n            onClick={onCheckAllDone}>{tasksLeft} tasks left</button>\n          <ul className='filter__list'>\n            {filterItems}\n          </ul>\n          <button\n            className={classNames}\n            id='clear-completed-btn'\n            type='button'\n            onClick={onClearCompleted}>Clear completed</button>\n        </div>\n      </div>\n    );\n  };\n};","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport TodoNewItem from '../todo-new-item';\nimport Todolist from '../todo-list';\nimport TodoFilter from '../todo-filter';\n\nimport './app.css';\n\nexport default class App extends Component {\n  nextId = Date.now();\n\n  state = {\n    todoData: [],\n    filter: 'all'\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('todos')) {\n      this.setState(({todoData}) => {\n        const storageData = JSON.parse(localStorage.getItem('todos'));\n  \n        return {\n          todoData: storageData\n        }\n      });\n    }\n  };\n\n  toggleDone = (id) => {\n    this.setState(({todoData}) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldItem = todoData[idx];\n      const newItem = {...oldItem, done: !oldItem.done};\n\n      const newArr = [\n        ...todoData.slice(0, idx),\n        newItem, \n        ...todoData.slice(idx + 1)\n      ];\n\n      return {\n        todoData: newArr\n      }\n    });\n  };\n\n  createTask(label) {\n    return {\n      label,\n      done: false,\n      id: this.nextId++\n    };\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n\n    this.setState(({todoData}) => {\n      const newArr = [\n        ...todoData,\n        newTask\n      ];\n      return {\n        todoData: newArr\n      };\n    });\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArr = [\n        ...todoData.slice(0, idx), \n        ...todoData.slice(idx + 1)\n      ];\n\n      return {\n        todoData: newArr\n      };\n    });\n  };\n\n  checkAllDone = () => {\n    this.setState(({todoData}) => {\n      const newArr = todoData.map((el) => {\n        const newEl = {...el, done: true};\n        return newEl;\n      });\n\n      return {\n        todoData: newArr\n      }\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({todoData}) => {\n      const newArr = todoData.filter((el) => !el.done);\n\n      return {\n        todoData: newArr\n      }\n    });\n  };\n\n  filterTasks = (items, filterName) => {\n    switch (filterName) {\n      case 'all':\n        return items;\n      case 'todo': \n        return items.filter((item) => !item.done);\n      case 'completed':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  };\n\n  changeActiveFilter = (filter) => {\n    this.setState({filter})\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todoData));\n  }\n\n  render() {\n    const toDoCount = this.state.todoData.length - this.state.todoData.filter((el) => el.done).length;\n    const visibleItems = this.filterTasks(this.state.todoData, this.state.filter);\n    \n    return (\n      <div className='app-container'>\n        <AppHeader />\n        <TodoNewItem onAdded={this.addTask}/>\n        <Todolist\n          todos={visibleItems}\n          onDeleted={this.deleteTask}\n          onToggleDone={this.toggleDone}/>\n        <TodoFilter \n          tasksLeft={toDoCount}\n          onCheckAllDone={this.checkAllDone}\n          hasDoneTask={toDoCount !== this.state.todoData.length}\n          onClearCompleted={this.clearCompleted}\n          filter={this.state.filter}\n          onChangeFilter={this.changeActiveFilter}\n          />\n      </div>\n    );\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}